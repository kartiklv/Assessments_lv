# -*- coding: utf-8 -*-
"""LVADSUSR159_b.kartik

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1b5HOAlqYfHSRbZ-eDDFVcZ8Po1H8oYGQ

1.
"""

def prop_management():
  length=float(input("Enter the length in (m): "))
  width=float(input("Enter width in (m): "))

  area=length*width

  print(f"Total area: {area}")
  if area<50:
    print("The property comes under small category.")
  elif area>50 and area<100:
    print("The property comes under medium category.")
  else:
    print("The property comes under large category.")

  prop_management()

"""2."""

weight = float(input("Enter your weight in kilograms: "))
height = float(input("Enter your height in meters: "))
bmi = round(weight / (height * height),2)
if bmi < 18.5:
    category = "Underweight, Eat more"
elif bmi < 25:
    category = "Normal weight, maintain diet and exercise"
elif bmi < 30:
    category = "Overweight, could use some exercise"
elif bmi < 35:
    category = "Obese (Class 1), have to start a diet on calorie deficit and start exercise"
elif bmi < 40:
    category = "Obese (Class 2), start a strict diet and exercise plan"
else:
    category = "Bariatic Obese (Class 3), go for some surgery"
print("Your BMI is:", bmi)
print("You are classified as:", category)

"""3."""

main_dict={}
def school_manager():
  name=input('Enter name: ')
  maths=int(input("Enter Maths marks: "))
  eng=int(input("Enter English marks: "))
  sci=int(input("Enter science marks: "))

  main_dict[f"{name}"]={"maths":maths,"english":eng, "science":sci}

x=True
while x:
  a=int(input("To add student details enter 1, to exit enter 0: "))
  if(a==0):
    x=False
  else:
    school_manager()

print(main_dict)

"""4."""

def content_recomend():
  age=int(input("Enter age: "))

  if age<13:
    print("You can watch PG 13 movies.")
  elif age>13 and age<18:
    print("You can wacth teen films.")
  elif age>18 and age<50:
    print("You can watch 18+ films")
  else:
    print("You can watch senior citizen movies")

content_recomend()

"""5."""

l1=[1,2,3,4,5,6,7,8] #subscriber IDs
ans=[]
def filterSubscribers():
  for i in range(len(l1)):
    if(l1[i]%2==0):
      ans.append(l1[i])

filterSubscribers()
print(ans)

"""6."""

def authentication():
  x=True
  y=True
  while x:
    if not y:
      print("Incrrect password! please try again...")

    str1=input("Password: ")
    if(str1=='123'):
      x=False
    y=False


authentication()
print("Successfully entered password!!")

"""7."""

def customer_feedback_analysis():
  n=int(input("Enter number of feedbacks(out of 10): "))
  sum=0
  for i in range(n):
    x=int(input("Enter score: "))
    sum+=x

  avg=sum/n

  if(avg<3):
    print("Bad rating. Imporove customer support")
  elif avg>3 and avg<5:
    print("Average rating")
  elif avg>5 and avg<7:
    print("Good rating!")
  else:
    print("Excellent rating!!")

customer_feedback_analysis()

"""8."""

def check_spam(string1):

  count=0
  for i in range(len(string1)):
    if(string1[i]=='a' or string1[i]=='e' or string1[i]=='i' or string1[i]=='o' or string1[i]=='u'):
      count+=1

  if(count>10):
    print("Spam comment")
  else:
    print("Not a spam")


check_spam("doisfhodiv sdfosidof fwifj aaaaaaa")

"""9.

"""



"""10."""

def emiCalculator():
  try:
    principal = float(input("Enter the principal amount: "))
    rate = float(input("Enter the annual interest rate (in percentage): ")) / 100
    time = float(input("Enter the time period (in years): "))
    interest = principal * ((1 + rate / 12) ** (12 * time) - 1)
    print("The compound interest is:", round(interest,2))
  except:
    print("Error")


emiCalculator()

"""11."""

def input_validation():
  name=input("Enter name: ")
  email=input("Enter email: ")
  age=int(input("Enter age: "))

  if('@' not in email or age<18 ):
    print("Incorrect data format")

input_validation()

"""12."""

def calculator(a,b,op):
  try:
    if(op=='+'):
      return a+b
    elif(op=='-'):
      return a-b
    elif(op=="*"):
      return a*b
    elif(op=="/"):
      return a/b

  except ZeroDivisionError:
    print("Zero division error")

calculator(4,0,'/')

"""13."""

import datetime

def read_data_file(filename):
  try:
      with open(filename, 'r') as file:
          data = file.read()
      return data
  except FileNotFoundError:
      print("file not found")
  except Exception as e:
      print("error")

def write_data_file(filename, data):
  try:
      with open(filename, 'w') as file:
          file.write(data)
  except Exception as e:
      print("error")


write_data_file('log.txt','time2')

read_data_file('log.txt')

"""14."""

def read_data_file(filename):
  try:
      with open(filename, 'r') as file:
          data = file.read()
      return data
  except FileNotFoundError:
      print("file not found")
  except Exception as e:
      print("error")

read_data_file('log.txt')

"""15."""

def write_data_file(filename, data):
  try:
      with open(filename, 'w') as file:
          file.write(data)
  except Exception as e:
      print("error")

write_data_file('stocks.txt','values')